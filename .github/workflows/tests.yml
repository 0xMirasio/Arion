name: Arion tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Init submodules
      run: git submodule update --init --recursive

    - name: APT dependencies
      run: sudo apt update && sudo apt upgrade && sudo apt -y install uuid-dev coreutils gcc-multilib g++-multilib make cmake

    - name: Configure
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel 4

    - name: Install
      run: sudo cmake --install ${{github.workspace}}/build

    - name: Run Tests
      run: |
        for test_dir in ${{github.workspace}}/tests/*/; do
          if [[ -f "$test_dir/build/test" && -f "$test_dir/res.txt" ]]; then
            echo "Running test : $test_dir"
            output=$("cd $test_dir/build && ./test")
            echo "$output" | md5sum > "$test_dir/output.md5"
            md5sum "$test_dir/res.txt" > "$test_dir/res.md5"
            if ! diff -q "$test_dir/output.md5" "$test_dir/res.md5"; then
              echo "Failure."
              exit 1
            else
              echo "Success."
            fi
          else
            echo "Skipping $test_dir: \"test\" binary or \"res.txt\" missing"
          fi
        done
